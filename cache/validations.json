{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/Distribution/WrappedERC20Token.sol:32",
        "version": {
          "withMetadata": "74a8aa8a364a3e9efa0cdd6d7bc6c6baa4538690d49bcff8b760b2b8afc3e62f",
          "withoutMetadata": "c13972cf16f63fa8ca0170d925a4b581981f7bf6f86f1cbcb2ee97d20e24d203",
          "linkedWithoutMetadata": "c13972cf16f63fa8ca0170d925a4b581981f7bf6f86f1cbcb2ee97d20e24d203"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/Distribution/WrappedERC20Token.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:33"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:37"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:39"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "59c6bae46a7972049c24175ae68172bb53d88b10e90b0b0998f5213e60653a36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AtlantisDistribution": {
        "src": "contracts/Distribution/AtlantisDistribution.sol:9",
        "version": {
          "withMetadata": "2988f3f126be2622a835fee4b6a0ee17c4a3cba36999d871f242981aff31d8cb",
          "withoutMetadata": "9a4e8b24e20e8b5d363caf705b6e1905e7dacb8a6d5e4d7c37bd16d8014e5bf4",
          "linkedWithoutMetadata": "9a4e8b24e20e8b5d363caf705b6e1905e7dacb8a6d5e4d7c37bd16d8014e5bf4"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address payable)",
          "balanceOf(address)",
          "relaxBalance(address)",
          "mint(uint256)",
          "transfer(address,uint256)",
          "changeLvl(address,uint8)",
          "mintToNRS(address,uint256)",
          "mintToRS(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AtlantisDistribution",
            "src": "contracts/Distribution/AtlantisDistribution.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "size",
            "src": "contracts/Distribution/AtlantisDistribution.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "cury",
            "src": "contracts/Distribution/AtlantisDistribution.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "total",
            "src": "contracts/Distribution/AtlantisDistribution.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:33"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:37"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:39"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Distribution/WrappedERC20Token.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "y",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "AtlantisDistribution",
              "src": "contracts/Distribution/AtlantisDistribution.sol:12"
            },
            {
              "label": "lvl",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "AtlantisDistribution",
              "src": "contracts/Distribution/AtlantisDistribution.sol:13"
            },
            {
              "label": "size",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "AtlantisDistribution",
              "src": "contracts/Distribution/AtlantisDistribution.sol:14"
            },
            {
              "label": "cury",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "AtlantisDistribution",
              "src": "contracts/Distribution/AtlantisDistribution.sol:15"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "AtlantisDistribution",
              "src": "contracts/Distribution/AtlantisDistribution.sol:16"
            },
            {
              "label": "fund_wallet",
              "offset": 0,
              "slot": "11",
              "type": "t_address_payable",
              "contract": "AtlantisDistribution",
              "src": "contracts/Distribution/AtlantisDistribution.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WrappedERC20Token2": {
        "src": "contracts/Distribution/WrappedERC20Token2.sol:9",
        "version": {
          "withMetadata": "2a5ac72cb3cce4ef0067327b1f9fbb8a25ca4221100b9b289ed97f1c4e0ea67e",
          "withoutMetadata": "186ad669f4bc3669a1a3d143b746a9844cea0cd7ba052418bc9ed71eeb6270d7",
          "linkedWithoutMetadata": "186ad669f4bc3669a1a3d143b746a9844cea0cd7ba052418bc9ed71eeb6270d7"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrappedERC20Token2",
            "src": "contracts/Distribution/WrappedERC20Token2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Operator": {
        "src": "contracts/Role/Operator.sol:8",
        "version": {
          "withMetadata": "87c65330bd14237500fbb02bc21fa429a22c3f916c5f8043b870758c65dc6242",
          "withoutMetadata": "57a2a3ce08217253517e23cd930cf69ebac746612f19765439da14601e072bcb",
          "linkedWithoutMetadata": "57a2a3ce08217253517e23cd930cf69ebac746612f19765439da14601e072bcb"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "()",
          "isOperator(address)",
          "addOperator(address)",
          "renounceOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Operator",
            "src": "contracts/Role/Operator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_operators",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)2573_storage",
              "contract": "Operator",
              "src": "contracts/Role/Operator.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)2573_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolCreator": {
        "src": "contracts/Role/PoolCreator.sol:7",
        "version": {
          "withMetadata": "8dbdc02da0c84819cfa6171bbe0ce6acbdee506eab1315ccb804c2d87a5f5ed9",
          "withoutMetadata": "4f93000410dfb81dcab2a619b6b8c4137333f327ba1d82231a062e2922f700b8",
          "linkedWithoutMetadata": "4f93000410dfb81dcab2a619b6b8c4137333f327ba1d82231a062e2922f700b8"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "()",
          "isPoolCreator(address)",
          "addPoolCreator(address)",
          "renouncePoolCreator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PoolCreator",
            "src": "contracts/Role/PoolCreator.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_poolCreators",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)2573_storage",
              "contract": "PoolCreator",
              "src": "contracts/Role/PoolCreator.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)2573_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Rewarder": {
        "src": "contracts/Role/Rewarder.sol:8",
        "version": {
          "withMetadata": "3812b667ae535b232b479cb18fa415990ae3d57903a67473fc733813e2fdb2e8",
          "withoutMetadata": "2a9c813966c9fbd693ca706fcd35bf9463df9b14e69e527c63ea2d65aa450d58",
          "linkedWithoutMetadata": "2a9c813966c9fbd693ca706fcd35bf9463df9b14e69e527c63ea2d65aa450d58"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "()",
          "isRewarder(address)",
          "addRewarder(address)",
          "renounceRewarder()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Rewarder",
            "src": "contracts/Role/Rewarder.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_rewarders",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)2573_storage",
              "contract": "Rewarder",
              "src": "contracts/Role/Rewarder.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)2573_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts/Role/Roles.sol:8",
        "version": {
          "withMetadata": "4b688b276c1a5085d4115ebaa59eced084996a468c1ffe10c075ee2e7d1facbb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}
{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "71e63e105c5bc112c1cc7a11509b95c456729ce319b4ba8ed47b89368639d892",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AtlantisDistribution": {
        "src": "contracts/Distribution/AtlantisDistribution.sol:9",
        "version": {
          "withMetadata": "c34168994112c85583a68f48300983437057d39aa302999681b9127082e9dbc1",
          "withoutMetadata": "0967bf1d987b9c2b3d11fb3469844261b77619c985b22382e21d0d98b59150ba",
          "linkedWithoutMetadata": "0967bf1d987b9c2b3d11fb3469844261b77619c985b22382e21d0d98b59150ba"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address payable)",
          "balanceOf(address)",
          "mint(uint256)",
          "transfer(address,uint256)",
          "changeLvl(address,uint8)",
          "mintToNRS(address,uint256)",
          "mintToRS(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AtlantisDistribution",
            "src": "contracts/Distribution/AtlantisDistribution.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AtlantisDistribution",
              "label": "balanceCoefficient",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Distribution/AtlantisDistribution.sol:17"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "level",
              "type": "t_mapping(t_address,t_uint8)",
              "src": "contracts/Distribution/AtlantisDistribution.sol:19"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "currentBC",
              "type": "t_array(t_uint256)3_storage",
              "src": "contracts/Distribution/AtlantisDistribution.sol:22"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "totalLevelSupply",
              "type": "t_array(t_uint256)3_storage",
              "src": "contracts/Distribution/AtlantisDistribution.sol:24"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "fund_wallet",
              "type": "t_address_payable",
              "src": "contracts/Distribution/AtlantisDistribution.sol:26"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)3_storage": {
              "label": "uint256[3]"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "contracts/Distribution/WrappedERC20Token.sol:32",
        "version": {
          "withMetadata": "c2bc51fb1384475d0bdc700d6cbb1ef0ee9e2de17f171dcc3a295ac6e7254b59",
          "withoutMetadata": "c13972cf16f63fa8ca0170d925a4b581981f7bf6f86f1cbcb2ee97d20e24d203",
          "linkedWithoutMetadata": "c13972cf16f63fa8ca0170d925a4b581981f7bf6f86f1cbcb2ee97d20e24d203"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/Distribution/WrappedERC20Token.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Distribution/WrappedERC20Token.sol:33"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/Distribution/WrappedERC20Token.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/Distribution/WrappedERC20Token.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/Distribution/WrappedERC20Token.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/Distribution/WrappedERC20Token.sol:40"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "contracts/Distribution/WrappedERC20Token.sol:32",
        "version": {
          "withMetadata": "c2bc51fb1384475d0bdc700d6cbb1ef0ee9e2de17f171dcc3a295ac6e7254b59",
          "withoutMetadata": "c13972cf16f63fa8ca0170d925a4b581981f7bf6f86f1cbcb2ee97d20e24d203",
          "linkedWithoutMetadata": "c13972cf16f63fa8ca0170d925a4b581981f7bf6f86f1cbcb2ee97d20e24d203"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/Distribution/WrappedERC20Token.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Distribution/WrappedERC20Token.sol:33"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/Distribution/WrappedERC20Token.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/Distribution/WrappedERC20Token.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/Distribution/WrappedERC20Token.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/Distribution/WrappedERC20Token.sol:40"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "71e63e105c5bc112c1cc7a11509b95c456729ce319b4ba8ed47b89368639d892",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AtlantisDistribution": {
        "src": "contracts/Distribution/AtlantisDistribution.sol:9",
        "version": {
          "withMetadata": "c34168994112c85583a68f48300983437057d39aa302999681b9127082e9dbc1",
          "withoutMetadata": "0967bf1d987b9c2b3d11fb3469844261b77619c985b22382e21d0d98b59150ba",
          "linkedWithoutMetadata": "0967bf1d987b9c2b3d11fb3469844261b77619c985b22382e21d0d98b59150ba"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address payable)",
          "balanceOf(address)",
          "mint(uint256)",
          "transfer(address,uint256)",
          "changeLvl(address,uint8)",
          "mintToNRS(address,uint256)",
          "mintToRS(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AtlantisDistribution",
            "src": "contracts/Distribution/AtlantisDistribution.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AtlantisDistribution",
              "label": "balanceCoefficient",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Distribution/AtlantisDistribution.sol:17"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "level",
              "type": "t_mapping(t_address,t_uint8)",
              "src": "contracts/Distribution/AtlantisDistribution.sol:19"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "currentBC",
              "type": "t_array(t_uint256)3_storage",
              "src": "contracts/Distribution/AtlantisDistribution.sol:22"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "totalLevelSupply",
              "type": "t_array(t_uint256)3_storage",
              "src": "contracts/Distribution/AtlantisDistribution.sol:24"
            },
            {
              "contract": "AtlantisDistribution",
              "label": "fund_wallet",
              "type": "t_address_payable",
              "src": "contracts/Distribution/AtlantisDistribution.sol:26"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)3_storage": {
              "label": "uint256[3]"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "WrappedERC20Token2": {
        "src": "contracts/Distribution/WrappedERC20Token2.sol:9",
        "version": {
          "withMetadata": "8e3c5a9dfda85b0fc7b249d680bfe8042d1238fd4fdd3033daaa37bd4c683c1f",
          "withoutMetadata": "91061b5502311ef35b13663a4cb1e3599a7545e6ff880f6deeb49360b76681be",
          "linkedWithoutMetadata": "91061b5502311ef35b13663a4cb1e3599a7545e6ff880f6deeb49360b76681be"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrappedERC20Token2",
            "src": "contracts/Distribution/WrappedERC20Token2.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Operator": {
        "src": "contracts/Role/Operator.sol:8",
        "version": {
          "withMetadata": "0883e1760e014c0d8b5c2c4f48d1fc46e45094217e42f0d2cc825a9b4d3979cf",
          "withoutMetadata": "57a2a3ce08217253517e23cd930cf69ebac746612f19765439da14601e072bcb",
          "linkedWithoutMetadata": "57a2a3ce08217253517e23cd930cf69ebac746612f19765439da14601e072bcb"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "()",
          "isOperator(address)",
          "addOperator(address)",
          "renounceOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Operator",
            "src": "contracts/Role/Operator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Operator",
              "label": "_operators",
              "type": "t_struct(Role)2642_storage",
              "src": "contracts/Role/Operator.sol:14"
            }
          ],
          "types": {
            "t_struct(Role)2642_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PoolCreator": {
        "src": "contracts/Role/PoolCreator.sol:7",
        "version": {
          "withMetadata": "dedacf12114da386b945b71c7b42bb19881d8cf2986b0abeaa222423ebed0dde",
          "withoutMetadata": "4f93000410dfb81dcab2a619b6b8c4137333f327ba1d82231a062e2922f700b8",
          "linkedWithoutMetadata": "4f93000410dfb81dcab2a619b6b8c4137333f327ba1d82231a062e2922f700b8"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "()",
          "isPoolCreator(address)",
          "addPoolCreator(address)",
          "renouncePoolCreator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PoolCreator",
            "src": "contracts/Role/PoolCreator.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PoolCreator",
              "label": "_poolCreators",
              "type": "t_struct(Role)2642_storage",
              "src": "contracts/Role/PoolCreator.sol:13"
            }
          ],
          "types": {
            "t_struct(Role)2642_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Rewarder": {
        "src": "contracts/Role/Rewarder.sol:8",
        "version": {
          "withMetadata": "d338f6929046961268b0a821d084ff81cf16171181a2e1e66a06636661b03ac4",
          "withoutMetadata": "2a9c813966c9fbd693ca706fcd35bf9463df9b14e69e527c63ea2d65aa450d58",
          "linkedWithoutMetadata": "2a9c813966c9fbd693ca706fcd35bf9463df9b14e69e527c63ea2d65aa450d58"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "()",
          "isRewarder(address)",
          "addRewarder(address)",
          "renounceRewarder()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Rewarder",
            "src": "contracts/Role/Rewarder.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Rewarder",
              "label": "_rewarders",
              "type": "t_struct(Role)2642_storage",
              "src": "contracts/Role/Rewarder.sol:14"
            }
          ],
          "types": {
            "t_struct(Role)2642_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Roles": {
        "src": "contracts/Role/Roles.sol:8",
        "version": {
          "withMetadata": "4b688b276c1a5085d4115ebaa59eced084996a468c1ffe10c075ee2e7d1facbb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}